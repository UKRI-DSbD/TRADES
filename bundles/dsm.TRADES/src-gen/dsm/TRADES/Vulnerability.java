/**
 * Copyright Israel Aerospace Industries, Eclipse contributors and others 2021. All rights reserved.
 * This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License 2.0
 * which accompanies this distribution, and is available at
 * https://www.eclipse.org/legal/epl-2.0/
 * 
 * SPDX-License-Identifier: EPL-2.0
 * 
 * Contributors:
 *     ELTA Ltd - initial API and implementation
 * 
 */
package dsm.TRADES;

import org.eclipse.emf.common.util.EList;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Vulnerability</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link dsm.TRADES.Vulnerability#getManifests <em>Manifests</em>}</li>
 *   <li>{@link dsm.TRADES.Vulnerability#getVulnerabilityType <em>Vulnerability Type</em>}</li>
 *   <li>{@link dsm.TRADES.Vulnerability#getAffects <em>Affects</em>}</li>
 * </ul>
 *
 * @see dsm.TRADES.TRADESPackage#getVulnerability()
 * @model
 * @generated
 */
public interface Vulnerability extends NamedElement, ElementWithId {

	/**
	 * Returns the value of the '<em><b>Manifests</b></em>' reference list.
	 * The list contents are of type {@link dsm.TRADES.Vulnerability}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Manifests</em>' reference list.
	 * @see dsm.TRADES.TRADESPackage#getVulnerability_Manifests()
	 * @model
	 * @generated
	 */
	EList<Vulnerability> getManifests();

	/**
	 * Returns the value of the '<em><b>Affects</b></em>' reference list.
	 * The list contents are of type {@link dsm.TRADES.ComponentType}.
	 * It is bidirectional and its opposite is '{@link dsm.TRADES.ComponentType#getAffectedBy <em>Affected By</em>}'.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Affects</em>' reference list.
	 * @see dsm.TRADES.TRADESPackage#getVulnerability_Affects()
	 * @see dsm.TRADES.ComponentType#getAffectedBy
	 * @model opposite="affectedBy"
	 * @generated
	 */
	EList<ComponentType> getAffects();

	/**
	 * Returns the value of the '<em><b>Vulnerability Type</b></em>' attribute.
	 * The literals are from the enumeration {@link dsm.TRADES.VulnerabilityTypeENUM}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @return the value of the '<em>Vulnerability Type</em>' attribute.
	 * @see dsm.TRADES.VulnerabilityTypeENUM
	 * @see #setVulnerabilityType(VulnerabilityTypeENUM)
	 * @see dsm.TRADES.TRADESPackage#getVulnerability_VulnerabilityType()
	 * @model
	 * @generated
	 */
	VulnerabilityTypeENUM getVulnerabilityType();

	/**
	 * Sets the value of the '{@link dsm.TRADES.Vulnerability#getVulnerabilityType <em>Vulnerability Type</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @param value the new value of the '<em>Vulnerability Type</em>' attribute.
	 * @see dsm.TRADES.VulnerabilityTypeENUM
	 * @see #getVulnerabilityType()
	 * @generated
	 */
	void setVulnerabilityType(VulnerabilityTypeENUM value);
} // Vulnerability
